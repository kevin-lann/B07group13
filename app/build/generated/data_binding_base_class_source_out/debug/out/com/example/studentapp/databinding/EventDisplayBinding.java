// Generated by view binder compiler. Do not edit!
package com.example.studentapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studentapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventDisplayBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView eventDescription;

  @NonNull
  public final CardView eventDisplay;

  @NonNull
  public final TextView eventLocation;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final TextView organizer;

  private EventDisplayBinding(@NonNull CardView rootView, @NonNull TextView eventDescription,
      @NonNull CardView eventDisplay, @NonNull TextView eventLocation, @NonNull TextView eventName,
      @NonNull TextView organizer) {
    this.rootView = rootView;
    this.eventDescription = eventDescription;
    this.eventDisplay = eventDisplay;
    this.eventLocation = eventLocation;
    this.eventName = eventName;
    this.organizer = organizer;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EventDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.event_description;
      TextView eventDescription = ViewBindings.findChildViewById(rootView, id);
      if (eventDescription == null) {
        break missingId;
      }

      CardView eventDisplay = (CardView) rootView;

      id = R.id.event_location;
      TextView eventLocation = ViewBindings.findChildViewById(rootView, id);
      if (eventLocation == null) {
        break missingId;
      }

      id = R.id.event_name;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.organizer;
      TextView organizer = ViewBindings.findChildViewById(rootView, id);
      if (organizer == null) {
        break missingId;
      }

      return new EventDisplayBinding((CardView) rootView, eventDescription, eventDisplay,
          eventLocation, eventName, organizer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
