// Generated by view binder compiler. Do not edit!
package com.example.studentapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studentapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewAnnouncementFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonPost;

  @NonNull
  public final Button buttonPrevious;

  @NonNull
  public final EditText editTextAnnouncementText;

  @NonNull
  public final EditText editTextHeadline;

  @NonNull
  public final Spinner spinnerIsEvent;

  @NonNull
  public final TextView textAnnouncementHeadline;

  @NonNull
  public final TextView textAnnouncementText;

  @NonNull
  public final TextView textIsEvent;

  @NonNull
  public final TextView textviewFirst;

  private NewAnnouncementFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonPost, @NonNull Button buttonPrevious,
      @NonNull EditText editTextAnnouncementText, @NonNull EditText editTextHeadline,
      @NonNull Spinner spinnerIsEvent, @NonNull TextView textAnnouncementHeadline,
      @NonNull TextView textAnnouncementText, @NonNull TextView textIsEvent,
      @NonNull TextView textviewFirst) {
    this.rootView = rootView;
    this.buttonPost = buttonPost;
    this.buttonPrevious = buttonPrevious;
    this.editTextAnnouncementText = editTextAnnouncementText;
    this.editTextHeadline = editTextHeadline;
    this.spinnerIsEvent = spinnerIsEvent;
    this.textAnnouncementHeadline = textAnnouncementHeadline;
    this.textAnnouncementText = textAnnouncementText;
    this.textIsEvent = textIsEvent;
    this.textviewFirst = textviewFirst;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewAnnouncementFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewAnnouncementFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.new_announcement_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewAnnouncementFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_post;
      Button buttonPost = ViewBindings.findChildViewById(rootView, id);
      if (buttonPost == null) {
        break missingId;
      }

      id = R.id.button_previous;
      Button buttonPrevious = ViewBindings.findChildViewById(rootView, id);
      if (buttonPrevious == null) {
        break missingId;
      }

      id = R.id.editTextAnnouncementText;
      EditText editTextAnnouncementText = ViewBindings.findChildViewById(rootView, id);
      if (editTextAnnouncementText == null) {
        break missingId;
      }

      id = R.id.editTextHeadline;
      EditText editTextHeadline = ViewBindings.findChildViewById(rootView, id);
      if (editTextHeadline == null) {
        break missingId;
      }

      id = R.id.spinnerIsEvent;
      Spinner spinnerIsEvent = ViewBindings.findChildViewById(rootView, id);
      if (spinnerIsEvent == null) {
        break missingId;
      }

      id = R.id.text_announcement_headline;
      TextView textAnnouncementHeadline = ViewBindings.findChildViewById(rootView, id);
      if (textAnnouncementHeadline == null) {
        break missingId;
      }

      id = R.id.text_announcement_text;
      TextView textAnnouncementText = ViewBindings.findChildViewById(rootView, id);
      if (textAnnouncementText == null) {
        break missingId;
      }

      id = R.id.text_is_event;
      TextView textIsEvent = ViewBindings.findChildViewById(rootView, id);
      if (textIsEvent == null) {
        break missingId;
      }

      id = R.id.textview_first;
      TextView textviewFirst = ViewBindings.findChildViewById(rootView, id);
      if (textviewFirst == null) {
        break missingId;
      }

      return new NewAnnouncementFragmentBinding((ConstraintLayout) rootView, buttonPost,
          buttonPrevious, editTextAnnouncementText, editTextHeadline, spinnerIsEvent,
          textAnnouncementHeadline, textAnnouncementText, textIsEvent, textviewFirst);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
